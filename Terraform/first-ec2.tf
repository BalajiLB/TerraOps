
########################################################################################
# üöÄ Terraform AWS EC2 Provisioning - All-in-One Visual Guide
########################################################################################

# üìö Documentation:
#    üìò Terraform Registry       : https://registry.terraform.io/
#    üìò AWS Provider Documentation: https://registry.terraform.io/providers/hashicorp/aws/latest/docs

########################################################################################
# üó∫Ô∏è Architecture Overview
#
#         +----------------------+       terraform apply       +---------------------+
#         |      Developer       |   ----------------------->  |         AWS         |
#         | (You / CI Pipeline)  |                             |    EC2 Instance     |
#         +----------------------+                             +---------------------+
#
########################################################################################


########################################################################################
# ‚ö†Ô∏è SECURITY TIP:
# ‚ùå Avoid hardcoding credentials directly in Terraform files.
# ‚úÖ Use one of the following secure methods:
#     ‚Ä¢ Environment Variables:
#         export AWS_ACCESS_KEY_ID="your-access-key"
#         export AWS_SECRET_ACCESS_KEY="your-secret-key"
#     ‚Ä¢ AWS CLI Profile (in ~/.aws/credentials)
#     ‚Ä¢ Use `shared_credentials_file` or `profile` in provider block if needed
########################################################################################


########################################################################################
# ‚öôÔ∏è AWS Provider Configuration
########################################################################################

provider "aws" {
  region     = "us-east-1"
  access_key = "PUT-YOUR-ACCESS-KEY-HERE"     # ‚ùå Replace with env var or profile in real use
  secret_key = "PUT-YOUR-SECRET-KEY-HERE"
}


########################################################################################
# üñ•Ô∏è EC2 INSTANCE DEFINITION (first_ec2.tf)
########################################################################################

resource "aws_instance" "myec2" {
  ami           = "ami-00c39f71452c08778"      # ‚úÖ Amazon Linux 2 AMI (Example)
  instance_type = "t2.micro"

  tags = {
    Name    = "MyEC2Instance"
    Project = "Terraform-Demo"
    Owner   = "YourName"
  }
}


########################################################################################
# üõ†Ô∏è TERRAFORM COMMANDS TO RUN
########################################################################################

# üì¶ Initialize the working directory:
# --------------------------------------------------
# terraform init

# üìù See what Terraform will do before applying:
# --------------------------------------------------
# terraform plan

# üöÄ Apply the changes to provision infrastructure:
# --------------------------------------------------
# terraform apply

# üßπ To destroy the infrastructure when no longer needed:
# --------------------------------------------------
# terraform destroy


########################################################################################
# ‚úÖ EXPECTED RESULT
########################################################################################

# ‚úîÔ∏è EC2 instance is launched in AWS us-east-1 region
# ‚úîÔ∏è AMI: ami-00c39f71452c08778
# ‚úîÔ∏è Instance Type: t2.micro
# ‚úîÔ∏è Tags: Name=MyEC2Instance, Project=Terraform-Demo, Owner=YourName

########################################################################################
